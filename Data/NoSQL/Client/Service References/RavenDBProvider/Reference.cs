//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.RavenDBProvider {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RavenConnection", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class RavenConnection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatabaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatabaseName {
            get {
                return this.DatabaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseNameField, value) != true)) {
                    this.DatabaseNameField = value;
                    this.RaisePropertyChanged("DatabaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerUrl {
            get {
                return this.ServerUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerUrlField, value) != true)) {
                    this.ServerUrlField = value;
                    this.RaisePropertyChanged("ServerUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrialData", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class TrialData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.RavenDBProvider.Parameter[] ParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long StressNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.RavenDBProvider.Parameter[] Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long StressNumber {
            get {
                return this.StressNumberField;
            }
            set {
                if ((this.StressNumberField.Equals(value) != true)) {
                    this.StressNumberField = value;
                    this.RaisePropertyChanged("StressNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Parameter", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Parameter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TrialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TrialNumber {
            get {
                return this.TrialNumberField;
            }
            set {
                if ((this.TrialNumberField.Equals(value) != true)) {
                    this.TrialNumberField = value;
                    this.RaisePropertyChanged("TrialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RavenDBProvider.IRavenDBProvider")]
    public interface IRavenDBProvider {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRavenDBProvider/PostTrialData", ReplyAction="http://tempuri.org/IRavenDBProvider/PostTrialDataResponse")]
        long PostTrialData(Client.RavenDBProvider.RavenConnection ravenConnection, Client.RavenDBProvider.TrialData trialData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRavenDBProvider/PostTrialData", ReplyAction="http://tempuri.org/IRavenDBProvider/PostTrialDataResponse")]
        System.Threading.Tasks.Task<long> PostTrialDataAsync(Client.RavenDBProvider.RavenConnection ravenConnection, Client.RavenDBProvider.TrialData trialData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRavenDBProvider/BulkInsertTrialData", ReplyAction="http://tempuri.org/IRavenDBProvider/BulkInsertTrialDataResponse")]
        long BulkInsertTrialData(Client.RavenDBProvider.RavenConnection ravenConnection, Client.RavenDBProvider.TrialData[] trialBatch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRavenDBProvider/BulkInsertTrialData", ReplyAction="http://tempuri.org/IRavenDBProvider/BulkInsertTrialDataResponse")]
        System.Threading.Tasks.Task<long> BulkInsertTrialDataAsync(Client.RavenDBProvider.RavenConnection ravenConnection, Client.RavenDBProvider.TrialData[] trialBatch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRavenDBProvider/ReadTrialData", ReplyAction="http://tempuri.org/IRavenDBProvider/ReadTrialDataResponse")]
        Client.RavenDBProvider.TrialData ReadTrialData(Client.RavenDBProvider.RavenConnection ravenConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRavenDBProvider/ReadTrialData", ReplyAction="http://tempuri.org/IRavenDBProvider/ReadTrialDataResponse")]
        System.Threading.Tasks.Task<Client.RavenDBProvider.TrialData> ReadTrialDataAsync(Client.RavenDBProvider.RavenConnection ravenConnection);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRavenDBProviderChannel : Client.RavenDBProvider.IRavenDBProvider, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RavenDBProviderClient : System.ServiceModel.ClientBase<Client.RavenDBProvider.IRavenDBProvider>, Client.RavenDBProvider.IRavenDBProvider {
        
        public RavenDBProviderClient() {
        }
        
        public RavenDBProviderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RavenDBProviderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RavenDBProviderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RavenDBProviderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public long PostTrialData(Client.RavenDBProvider.RavenConnection ravenConnection, Client.RavenDBProvider.TrialData trialData) {
            return base.Channel.PostTrialData(ravenConnection, trialData);
        }
        
        public System.Threading.Tasks.Task<long> PostTrialDataAsync(Client.RavenDBProvider.RavenConnection ravenConnection, Client.RavenDBProvider.TrialData trialData) {
            return base.Channel.PostTrialDataAsync(ravenConnection, trialData);
        }
        
        public long BulkInsertTrialData(Client.RavenDBProvider.RavenConnection ravenConnection, Client.RavenDBProvider.TrialData[] trialBatch) {
            return base.Channel.BulkInsertTrialData(ravenConnection, trialBatch);
        }
        
        public System.Threading.Tasks.Task<long> BulkInsertTrialDataAsync(Client.RavenDBProvider.RavenConnection ravenConnection, Client.RavenDBProvider.TrialData[] trialBatch) {
            return base.Channel.BulkInsertTrialDataAsync(ravenConnection, trialBatch);
        }
        
        public Client.RavenDBProvider.TrialData ReadTrialData(Client.RavenDBProvider.RavenConnection ravenConnection) {
            return base.Channel.ReadTrialData(ravenConnection);
        }
        
        public System.Threading.Tasks.Task<Client.RavenDBProvider.TrialData> ReadTrialDataAsync(Client.RavenDBProvider.RavenConnection ravenConnection) {
            return base.Channel.ReadTrialDataAsync(ravenConnection);
        }
    }
}
